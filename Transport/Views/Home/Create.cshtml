@model Transport.Models.Load

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Load</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfPallets, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfPallets, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfPallets, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlannedTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlannedTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlannedTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ArivalTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ArivalTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ArivalTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DockOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DockOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DockOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DockOff, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DockOff, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DockOff, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepartureTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartureTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDStatus, "IDStatus", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IDStatus, (SelectList) ViewBag.StatusList,
               "Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDLoadType, "IDLoadType", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IDLoadType, (SelectList) ViewBag.LoadTypeList,
                               "Load Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDLoadType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDCustomers, "IDCustomers", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IDCustomers, (SelectList) ViewBag.CustomerList,
                               "Customers", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDCustomers, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDDocks, "IDDocks", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IDDocks, (SelectList) ViewBag.DockList,
                               "Docks", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDDocks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" id="saveBtnCreate" class="btn btn-default" />
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>

    </div>
}
    <script>
        $('#saveBtnCreate').click(function () {
            var numberOfPallets = ($('#NumberOfPallets').val());
            var plannedTime = ($('#PlannedTime').val());
            var arivalTime = ($('#ArivalTime').val());
            var dockOn = ($('#DockOn').val());
            var dockOff = ($('#DockOff').val());
            var departureTime = ($('#DepartureTime').val());
            var idStatus = ($('#IDStatus').val());
            var idLoadType = ($('#IDLoadType').val());
            var idCustomers = ($('#IDCustomers').val());
            var idDocks = ($('#IDDocks').val());


            console.log(numberOfPallets, plannedTime, arivalTime, dockOn, dockOff, departureTime, idStatus, idLoadType, idCustomers, idDocks);

            $.ajax({
                url: '/Home/Create',
                type: 'POST',
                data: {
                    NumberOfPallets: numberOfPallets,
                    PlannedTime: plannedTime,
                    ArivalTime: arivalTime,
                    DockOn: dockOn,
                    DockOff: dockOff,
                    DepartureTime: departureTime,
                    IDStatus: idStatus,
                    IDLoadType: idLoadType,
                    IDCustomers: idCustomers,
                    IDDocks: idDocks
                },

                success: function (data, status, xhr) {

                    if (data.success) {
                        alert("Done")
                        location.href = "/Home/Index";
                    } else {
                        console.log(data);
                        debugger;

                        for (var err of data.error) {
                            var field = err.Key;
                            var errField = $('[data-valmsg-for="' + field + '"]')
                            errField.html(err.Value.join("<br>"));
                        }
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert(errorMessage);
                }
            });

                    });

               
    </script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
